// <auto-generated />
using System;
using DGPub.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DGPub.Infra.Data.Migrations
{
    [DbContext(typeof(DGPubContext))]
    [Migration("20200713232412_StartSqlDatabase")]
    partial class StartSqlDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DGPub.Domain.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61e2d6a1-f060-4293-978b-28ffc05842e1"),
                            Name = "Cerveja",
                            Price = 5m
                        },
                        new
                        {
                            Id = new Guid("02e617c3-6675-447c-96d1-a41bfefd426d"),
                            Name = "Conhaque",
                            Price = 20m
                        },
                        new
                        {
                            Id = new Guid("38184383-6e55-4464-9010-4242e3777a2c"),
                            Name = "Suco",
                            Price = 50m
                        },
                        new
                        {
                            Id = new Guid("5db8dfb6-baaa-460f-8c02-5249a47abd1f"),
                            Name = "Água",
                            Price = 70m
                        });
                });

            modelBuilder.Entity("DGPub.Domain.Tabs.ItemTab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("TabId");

                    b.ToTable("ItemTab");
                });

            modelBuilder.Entity("DGPub.Domain.Tabs.Tab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Open")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tab");
                });

            modelBuilder.Entity("DGPub.Domain.Tabs.ItemTab", b =>
                {
                    b.HasOne("DGPub.Domain.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DGPub.Domain.Tabs.Tab", "Tab")
                        .WithMany("Items")
                        .HasForeignKey("TabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
